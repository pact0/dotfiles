set -g mouse on

bind-key r source-file ~/.tmux.conf \; display-message "~/.tmux.conf reloaded"

set-window-option -g mode-keys vi
bind -T copy-mode-vi v send-keys -X begin-selection
bind -T copy-mode-vi y send-keys -X copy-pipe-and-cancel 'xclip -in -selection clipboard'
# set-option -sa terminal-overrides ',XXX:RGB'

# Remap prefix from 'C-b' to 'C-a'
unbind C-b

unbind C-6
unbind C-^
set-option -g prefix C-space
bind-key C-space send-prefix

set -g default-shell "/bin/zsh"


######################################################################
# START OF PLUGINS
######################################################################

# Plugin manager for tmux
set -g @plugin 'tmux-plugins/tpm'

# Simple tmux options for anyone
set -g @plugin 'tmux-plugins/tmux-sensible'

# Gruvbox theme for tmux - powerline support!
# set -g @plugin 'egel/tmux-gruvbox'

# Persistent tmux envs across system restarts
set -g @plugin 'tmux-plugins/tmux-resurrect'



# Continuous saving of tmux environment
set -g @plugin 'tmux-plugins/tmux-continuum'


#######################################################
# TMUX-CONTINUUM
#######################################################

# Enables restoral of saved tmux config
set -g @continuum-restore 'on'

# How often to save a tmux layout
set -g @continuum-save-interval '5'

#######################################################
# TMUX-RESURRECT
#######################################################

# Capture contents of each pane
set -g @resurrect-capture-pane-contents 'on'

# Set to resurrect neovim sessions
set -g @resurrect-strategy-nvim 'session'

# Processes to resurrect
#set -g @resurrect-processes '~julia'

#######################################################
# TMUX-SENSIBLE
#######################################################

# Increase scrollback buffer size
set -g history-limit 5000

#######################################################
# TMUX-TILISH
#######################################################

set -g @plugin 'jabirali/tmux-tilish'
set -g @tilish-navigator 'on'


######################################################################
# END OF PLUGINS
######################################################################




######################################################################
# START OF GENERAL CONFIGURATIONS
######################################################################

# Turn on interactivity with mouse
set -g mouse on

# Enables italics in tmux
set -g default-terminal "xterm-256color"
#set-option -g default-terminal "screen-256color"

# Change the position of the status bar
# set-option -g status-position bottom

# Start window numbering at specific num
set -g base-index 1
setw -g pane-base-index 1

# Renumber windows on window close
set -g renumber-windows on

# don't rename windows automatically
set-option -g allow-rename off

#######################################################
# KEY BINDING
#######################################################



# Smart pane switching with awareness of Vim splits.
# See: https://github.com/christoomey/vim-tmux-navigator
#is_vim="ps -o state= -o comm= -t '#{pane_tty}' \
    #| grep -iqE '^[^TXZ ]+ +(\\S+\\/)?g?(view|n?vim?x?)(diff)?$'"
#bind-key -n 'C-h' if-shell "$is_vim" 'send-keys C-h'  'select-pane -L'
#bind-key -n 'C-j' if-shell "$is_vim" 'send-keys C-j'  'select-pane -D'
#bind-key -n 'C-k' if-shell "$is_vim" 'send-keys C-k'  'select-pane -U'
#bind-key -n 'C-l' if-shell "$is_vim" 'send-keys C-l'  'select-pane -R'
#tmux_version='$(tmux -V | sed -En "s/^tmux ([0-9]+(.[0-9]+)?).*/\1/p")'
#if-shell -b '[ "$(echo "$tmux_version < 3.0" | bc)" = 1 ]' \
    #"bind-key -n 'C-\\' if-shell \"$is_vim\" 'send-keys C-\\'  'select-pane -l'"
#if-shell -b '[ "$(echo "$tmux_version >= 3.0" | bc)" = 1 ]' \
    #"bind-key -n 'C-\\' if-shell \"$is_vim\" 'send-keys C-\\\\'  'select-pane -l'"

bind-key -T copy-mode-vi 'C-h' select-pane -L
bind-key -T copy-mode-vi 'C-j' select-pane -D
bind-key -T copy-mode-vi 'C-k' select-pane -U
bind-key -T copy-mode-vi 'C-l' select-pane -R
bind-key -T copy-mode-vi 'C-\' select-pane -l

# Bind popup display commands
#bind t display-popup -KER "topydo columns"
#bind D display-popup -h80% -w80% -KR "gcalcli --calendar \"JZ Calendar\" calw"
#bind s display-popup -h80% -w80% -KER "spt"
#bind T display-popup -KR "$SHELL"

# Rebind splits to start at pwd
bind-key v split-window -v  -c '#{pane_current_path}'
bind-key h split-window -h  -c '#{pane_current_path}'

# open htop in new pane
bind-key C-h split-window -h "htop"

# open .zshrc in new pane -c specifies directory
#bind-key C-f split-window -h  -c ~/ "nvim .zshrc"

# Prompted join-pane
#bind -n M-m select-pane -m # mark
#bind -n M-M select-pane -M # unmark

bind-key C-p command-prompt -p "join pane from: "  "join-pane -h -s '%%'"


# Easily swap a pane (targeted by pane number) with the current pane
bind-key s display-panes\; command-prompt -p "pane #: "  "swap-pane -t '%%'"

# move pane to a new session
bind-key C-b send-keys 'tat && exit' 'C-m'
bind-key K run-shell 'tmux switch-client -n \; kill-session -t "$(tmux display-message -p "#S")" || tmux kill-session'

# open list of sessions in a new pane
bind C-j split-window -v "tmux list-sessions | sed -E 's/:.*$//' | grep -v \"^$(tmux display-message -p '#S')\$\" | fzf --reverse | xargs tmux switch-client -t"

# Start new pane with pwd
bind c new-window -c "#{pane_current_path}"

# Resizing panes
# Fine adjustment (1 or 2 cursor cells per bump)
bind -n S-Left resize-pane -L 2
bind -n S-Right resize-pane -R 2
bind -n S-Down resize-pane -D 1
bind -n S-Up resize-pane -U 1

# Coarse adjustment (5 or 10 cursor cells per bump)
bind -n C-Left resize-pane -L 10
bind -n C-Right resize-pane -R 10
bind -n C-Down resize-pane -D 5
bind -n C-Up resize-pane -U 5

# Move current pane to a new window
bind-key b break-pane -d

# list sessions
bind-key j choose-tree

# Use vim keybindings in copy mode
# use <prefix> [ to enter copy mode
setw -g mode-keys vi

# vi like copy paste behaviour
#set-option -g default-command "command -v reattach-to-user-namespace >/dev/null 2>&1 && reattach-to-user-namespace -l $SHELL || $SHELL -l"

#set -g default-command "reattach-to-user-namespace -l $SHELL"

# enter copy mode with C-a [
bind-key -T copy-mode-vi 'v' send -X begin-selection
bind-key -T copy-mode-vi 'V' send -X select-line
bind-key -T copy-mode-vi 'r' send -X rectangle-toggle
bind-key -T copy-mode-vi 'y' send -X copy-pipe-and-cancel "pbcopy"
# note that 'q' will cancel if you want to get out of copy mode
# Update default binding of `Enter` to also use copy-pipe
#unbind -t vi-copy Enter
#bind-key -t vi-copy Enter copy-pipe "reattach-to-user-namespace pbcopy"

######################################################################
# END OF GENERAL CONFIGURATIONS
######################################################################



#####################################################################
# THEME
#####################################################################

# This tmux statusbar config was created based on gruvbox colorscheme

# status bar
set -g status "on"
#set -g status-attr "none"
set -g status-justify "left"
set -g status-bg "colour237"

# status left
#set -g status-left-attr "none"
set -g status-left-length "100"
set -g status-left "#[fg=colour237,bg=colour7,bold] #S #[fg=colour7,bg=colour237,nobold,nounderscore,noitalics]"

# status right
#set -g status-right-attr "none"
set -g status-right-length "100"
set -g status-right "#[fg=colour12]#{?client_prefix,#[reverse] Command #[noreverse] ,} #[fg=colour238,bg=colour237,nobold,nounderscore,noitalics]#[fg=colour7,bg=colour238] %Y-%m-%d  %H:%M #[fg=colour7,bg=colour238,nobold,nounderscore,noitalics]#[fg=colour237,bg=colour7] #h "

# window
#setw -g window-status-attr "none"
setw -g window-status-separator ""
setw -g window-status-format "#[fg=colour7,bg=colour237] #I #[fg=colour7,bg=colour237] #W "

# active window
#setw -g window-status-activity-attr "none"
setw -g window-status-current-format "#[fg=colour237,bg=colour3,nobold,nounderscore,noitalics]#[fg=colour237,bg=colour3] #I #[fg=colour237,bg=colour3] #W #[fg=colour3,bg=colour237,nobold,nounderscore,noitalics]"


# Initialize tpm plugin manager - DO NOT MOVE
run '~/.tmux/plugins/tpm/tpm'
